---
name: Validate-YAML
run-name: Pipeline run by @${{ github.actor }}

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  push:
    branches: [main]

env:
  KUSTOMIZE_VERSION: "5.4.1"
  HELM_VERSION: "3.16.1"

jobs:
  validate-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install yamllint
        run: |
          python -m pip install --upgrade pip
          pip install yamllint

      - name: Show yamllint version
        run: yamllint --version

      - name: Run yamllint
        run: yamllint -c tools/.yamllint .

  lint-kubernetes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Kubernetes manifests
        uses: stackrox/kube-linter-action@v1.0.5
        with:
          directory: .
          config: .kube-linter.yaml
        continue-on-error: true

  validate-kustomize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash -s -- ${{ env.KUSTOMIZE_VERSION }}
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Validate kustomize overlays
        run: |
          echo "Validating kustomize configurations..."
          exit_code=0

          # Find all kustomization.yaml files and validate them
          while IFS= read -r -d '' kustomization_file; do
            dir=$(dirname "$kustomization_file")
            echo "Validating: $kustomization_file"

            if ! kustomize build "$dir" > /dev/null 2>&1; then
              echo "❌ Failed to build: $kustomization_file"
              kustomize build "$dir" || true
              exit_code=1
            else
              echo "✅ Successfully validated: $kustomization_file"
            fi
          done < <(find . -name "kustomization.yaml" -print0)

          if [ $exit_code -ne 0 ]; then
            echo "❌ Some kustomize validations failed"
            exit 1
          else
            echo "✅ All kustomize configurations are valid"
          fi

  lint-helm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Lint Helm charts
        run: |
          echo "Linting Helm charts..."
          exit_code=0

          # Find all Chart.yaml files and lint them
          while IFS= read -r -d '' chart_file; do
            dir=$(dirname "$chart_file")
            echo "Linting Helm chart: $chart_file"

            if ! helm lint "$dir"; then
              echo "❌ Failed to lint: $chart_file"
              exit_code=1
            else
              echo "✅ Successfully linted: $chart_file"
            fi
          done < <(find . -name "Chart.yaml" -print0)

          if [ $exit_code -ne 0 ]; then
            echo "❌ Some Helm chart validations failed"
            exit 1
          else
            echo "✅ All Helm charts are valid"
          fi

  validate-kubernetes-schemas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubeval
        run: |
          curl -L https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz | tar xz
          sudo mv kubeval /usr/local/bin

      - name: Validate Kubernetes schemas
        run: |
          echo "Validating Kubernetes resource schemas..."
          exit_code=0

          # Find all YAML files and validate them
          find . -name "*.yaml" -o -name "*.yml" | while read -r file; do
            # Skip non-Kubernetes files
            if grep -q "apiVersion\|kind" "$file" 2>/dev/null; then
              echo "Validating schema: $file"
              if ! kubeval "$file"; then
                echo "❌ Schema validation failed: $file"
                exit_code=1
              fi
            fi
          done

          if [ $exit_code -ne 0 ]; then
            echo "❌ Some schema validations failed"
            exit 1
          else
            echo "✅ All Kubernetes schemas are valid"
          fi
        continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
